security:
    encoders:
        # Symfony\Component\Security\Core\User\User: plaintext
        FOS\UserBundle\Model\UserInterface: bcrypt
    
    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: ROLE_ADMIN
        
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers    
    providers:
        # in_memory:
        #     memory:
        #         users:
        #             szym:
        #                 password: szym123
        #                 roles: 'ROLE_ADMIN'
        #             alex:
        #                 password: alex123
        #                 roles: 'ROLE_ADMIN'
        fos_userbundle:
            id: fos_user.user_provider.username
                    
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            # anonymous: true
            # http_basic: ~
            # logout:
            #      path: /logout
            #      target: /
            pattern: ^/
            form_login:
                provider: fos_userbundle
                csrf_token_generator: security.csrf.token_manager

            logout:       true
            anonymous:    true

               # activate different ways to authenticate

               # http_basic: true
               # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

               # form_login: true
               # https://symfony.com/doc/current/security/form_login_setup.html

            remember_me:
                secret:   '%kernel.secret%'
                lifetime: 604800 # 1 week in seconds
                path:     /
                # by default, the feature is enabled by checking a
                # checkbox in the login form (see below), uncomment the
                # following line to always enable it.
                #always_remember_me: true   

       # Easy way to control access for large sections of your site
       # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/new, roles: ROLE_ADMIN }
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/, role: ROLE_ADMIN }

           # - { path: ^/profile, roles: ROLE_USER }

